{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About ProSAP ProSAP Desktop is an integrated open-source framework for data analysis related to thermal shift assays. The graphical user interface is organized with QT platform, and the functions were written in Python and R programming languages. At present, it provides data conversion and preprocessing (including normalization, missing value imputation, etc.), conventional thermal proteome profiling (TPP) analysis, nonparametric TPP analysis (NPA), isothermal shift analysis (iTSA) and thermal proximity coaggregation analysis (TPCA). The software is developed by Tan Lab (Southern University of Science and Technology, China PR). The original author and current maintainer is Ji Hongchao (ji.hongchao@foxmail.com) Anyone can use, modify and convey the software under GPL (>=3.0) license. For reporting bugs or requesting new features, you can put forward issues at: https://github.com/hcji/ProSAP/issues. Change log v 0.99.5 - Support 2D-TPP analysis - R is no longer necessary v 0.99.4 - Support MacOS platform - Suppress R concole output to fix 'cffi warning' v 0.99.3 - Automatically install R-4.1.0, if R not in your system - Fix R failed error with code:2 v 0.99.2 - Conventional TPP analysis, nonparametric TPP analysis and iTSA analysis - Data preprocessing, normalization, missing value imputation - Thermal shift curve fitting and visualization Citation Hongchao Ji, Xue Lu, Zhenxiang Zheng, Siyuan Sun, Chris Song Heng Tan*, ProSAP: A GUI Software Tool for Statistical Analysis and Assessment of Thermal Stability Data\uff0c Briefings in Bioinformation, In Revision.","title":"Home"},{"location":"#_1","text":"","title":""},{"location":"#about-prosap","text":"ProSAP Desktop is an integrated open-source framework for data analysis related to thermal shift assays. The graphical user interface is organized with QT platform, and the functions were written in Python and R programming languages. At present, it provides data conversion and preprocessing (including normalization, missing value imputation, etc.), conventional thermal proteome profiling (TPP) analysis, nonparametric TPP analysis (NPA), isothermal shift analysis (iTSA) and thermal proximity coaggregation analysis (TPCA). The software is developed by Tan Lab (Southern University of Science and Technology, China PR). The original author and current maintainer is Ji Hongchao (ji.hongchao@foxmail.com) Anyone can use, modify and convey the software under GPL (>=3.0) license. For reporting bugs or requesting new features, you can put forward issues at: https://github.com/hcji/ProSAP/issues.","title":"About ProSAP"},{"location":"#change-log","text":"v 0.99.5 - Support 2D-TPP analysis - R is no longer necessary v 0.99.4 - Support MacOS platform - Suppress R concole output to fix 'cffi warning' v 0.99.3 - Automatically install R-4.1.0, if R not in your system - Fix R failed error with code:2 v 0.99.2 - Conventional TPP analysis, nonparametric TPP analysis and iTSA analysis - Data preprocessing, normalization, missing value imputation - Thermal shift curve fitting and visualization","title":"Change log"},{"location":"#citation","text":"Hongchao Ji, Xue Lu, Zhenxiang Zheng, Siyuan Sun, Chris Song Heng Tan*, ProSAP: A GUI Software Tool for Statistical Analysis and Assessment of Thermal Stability Data\uff0c Briefings in Bioinformation, In Revision.","title":"Citation"},{"location":"features/","text":"General Features The main interface of ProSAP includes four buttons corresponding to the function modules. Generally the export file of Proteome Discoverer or MaxQuant should be preprocessed first. For different experimental purpose, you may need PISA/iTSA analysis, TPP analysis, 2D-TPP analysis and/or TPCA analysis, just push the corresponding buttons.","title":"User Guide"},{"location":"features/#general-features","text":"The main interface of ProSAP includes four buttons corresponding to the function modules. Generally the export file of Proteome Discoverer or MaxQuant should be preprocessed first. For different experimental purpose, you may need PISA/iTSA analysis, TPP analysis, 2D-TPP analysis and/or TPCA analysis, just push the corresponding buttons.","title":"General Features"},{"location":"setup/","text":"Stable version Download Link: Windows: ProSAP-0.99.4-Windows.zip Linux: ProSAP-0.99.4-Linux.tar.xz MacOS: ProSAP-0.99.4-Mac.zip Windows The installer version should be preferred but might require administrator permissions. Please follow the video of the installation at video folder . Note : 1. Since we do not pay Microsoft for certification, you might have to confirm that you want to trust \"software from an unknown source\". 2. When installing, please do not change the default path, because sometimes we find it does not run correctly with customized path. 3. We observed unknown errors happened if you have installed multiple versions of R. Uninstall all version of R and reinstall the latest version will fix the error. 4. When running for the first time, it may need a long time to install the R package. There will be some requirements showing in the command prompt window, you should just follow the instructions. Linux Please follow the following installation steps and refer the video of the installation at video folder : Install R sudo apt-get install r-base Install extra dependency of QT: sudo apt-get install libxcb-xinerama0 Download the tgz file and unzip to any folder and execute ProSAP. Execute the binary file: ./ProSAP When running for the first time, it may need a long time to install the R package. There will be some requirements showing in the command prompt window, you should just follow the instructions. MacOS Please follow the following installation steps and refer the video of the installation at video folder : Allow software from unknown developers: sudo spctl --master-disable Install R Download the zip file and unzip to any folder and execute ProSAP. Execute the binary file: ./ProSAP When running for the first time, it may need a long time to install the R package. There will be some requirements showing in the command prompt window, you should just follow the instructions. MacOS with M1 chip If you are using MacBook Pro with M1 chip, you should install Rosetta first. Then, you should install R of High Sierra version (Inter 64 based). This is because rpy2 has not support ARM64 based R yet. We will update if rpy2 support it in the future. Next, you can follow the same step 1 ~ step 5 of MacOS. Note: ProSAP has been test on Windows 7, Windows 10, Windows 11, Ubuntu 20.04 and MacOS 11.6.1. However, it does not work on Windows XP. Development version Windows or MacOS Install Anaconda or Miniconda Install R Install Git Open commond line, create environment and enter with the following commands: conda create -n ProSAP python=3.8 conda activate ProSAP Note: MacBook Pro with M1 chip may need python=3.9 and make sure R version is suitable. 4. Clone the repository and enter: git clone https://github.com/hcji/ProSAP.git cd ProSAP Install dependency with the following commands: pip install requirements.txt Run ProSAP.py: python ProSAP.py Or, you may want to compile binary and run exe: pyinstaller ProSAP.py -i ./img/ProSAP.ico --hidden-import=\u201csklearn.utils._weight_vector\u201d cd dist/ProSAP ProSAP.exe Linux Most Linux distributions have included git and conda, but you may need install extra dependency of QT: sudo apt-get install libxcb-xinerama0 Install R sudo apt-get install r-base Refer the step 3 ~ step 7 of Windows or MacOS.","title":"Installation"},{"location":"setup/#stable-version","text":"Download Link: Windows: ProSAP-0.99.4-Windows.zip Linux: ProSAP-0.99.4-Linux.tar.xz MacOS: ProSAP-0.99.4-Mac.zip","title":"Stable version"},{"location":"setup/#windows","text":"The installer version should be preferred but might require administrator permissions. Please follow the video of the installation at video folder . Note : 1. Since we do not pay Microsoft for certification, you might have to confirm that you want to trust \"software from an unknown source\". 2. When installing, please do not change the default path, because sometimes we find it does not run correctly with customized path. 3. We observed unknown errors happened if you have installed multiple versions of R. Uninstall all version of R and reinstall the latest version will fix the error. 4. When running for the first time, it may need a long time to install the R package. There will be some requirements showing in the command prompt window, you should just follow the instructions.","title":"Windows"},{"location":"setup/#linux","text":"Please follow the following installation steps and refer the video of the installation at video folder : Install R sudo apt-get install r-base Install extra dependency of QT: sudo apt-get install libxcb-xinerama0 Download the tgz file and unzip to any folder and execute ProSAP. Execute the binary file: ./ProSAP When running for the first time, it may need a long time to install the R package. There will be some requirements showing in the command prompt window, you should just follow the instructions.","title":"Linux"},{"location":"setup/#macos","text":"Please follow the following installation steps and refer the video of the installation at video folder : Allow software from unknown developers: sudo spctl --master-disable Install R Download the zip file and unzip to any folder and execute ProSAP. Execute the binary file: ./ProSAP When running for the first time, it may need a long time to install the R package. There will be some requirements showing in the command prompt window, you should just follow the instructions.","title":"MacOS"},{"location":"setup/#macos-with-m1-chip","text":"If you are using MacBook Pro with M1 chip, you should install Rosetta first. Then, you should install R of High Sierra version (Inter 64 based). This is because rpy2 has not support ARM64 based R yet. We will update if rpy2 support it in the future. Next, you can follow the same step 1 ~ step 5 of MacOS. Note: ProSAP has been test on Windows 7, Windows 10, Windows 11, Ubuntu 20.04 and MacOS 11.6.1. However, it does not work on Windows XP.","title":"MacOS with M1 chip"},{"location":"setup/#development-version","text":"","title":"Development version"},{"location":"setup/#windows-or-macos","text":"Install Anaconda or Miniconda Install R Install Git Open commond line, create environment and enter with the following commands: conda create -n ProSAP python=3.8 conda activate ProSAP Note: MacBook Pro with M1 chip may need python=3.9 and make sure R version is suitable. 4. Clone the repository and enter: git clone https://github.com/hcji/ProSAP.git cd ProSAP Install dependency with the following commands: pip install requirements.txt Run ProSAP.py: python ProSAP.py Or, you may want to compile binary and run exe: pyinstaller ProSAP.py -i ./img/ProSAP.ico --hidden-import=\u201csklearn.utils._weight_vector\u201d cd dist/ProSAP ProSAP.exe","title":"Windows or MacOS"},{"location":"setup/#linux_1","text":"Most Linux distributions have included git and conda, but you may need install extra dependency of QT: sudo apt-get install libxcb-xinerama0 Install R sudo apt-get install r-base Refer the step 3 ~ step 7 of Windows or MacOS.","title":"Linux"}]}